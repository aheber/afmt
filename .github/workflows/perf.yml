name: Hyperfine Benchmark and mdBook Deploy
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # This allows manual triggering

jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags
    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Build Release
      run: cargo build --release
    - name: Install hyperfine
      run: sudo apt-get install hyperfine
    - name: Download large Apex files
      run: |
        git clone https://github.com/xixiaofinland/large_apex_files
    - name: Run hyperfine benchmark
      run: |
        mkdir -p docs/src
        for file in $(ls -S large_apex_files/files); do
          echo "## Benchmark for $file" >> ../../docs/src/results.md
          hyperfine --runs 50 --min-runs 100 --warmup 10 -i \
            "../../target/release/afmt -f $file" --export-markdown temp_results.md
          tail -n +4 temp_results.md >> ../../docs/src/results.md
          echo "" >> ../../docs/src/results.md
        done
    - name: Install mdBook
      run: cargo install mdbook
    - name: Setup mdBook project
      run: |
        cd docs
        echo '[book]' > book.toml
        echo 'title = "AFMT Benchmark Results"' >> book.toml
        echo 'authors = ["GitHub Actions"]' >> book.toml
        echo 'src = "src"' >> book.toml
        echo '' >> book.toml
        echo '[output.html]' >> book.toml
        echo 'site-url = "/afmt/"' >> book.toml
        echo '# Summary' > src/SUMMARY.md
        echo '' >> src/SUMMARY.md
        echo '- [Benchmark Results](results.md)' >> src/SUMMARY.md
    - name: Build mdBook
      run: |
        cd docs
        mdbook build
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs/book
    # Commit and push changes
    - name: Commit and Push Changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Action"
        git add docs
        git commit -m "Update benchmark results and build mdBook" || echo "No changes to commit"
        git push origin HEAD:main

  deploy:
    needs: benchmark
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

